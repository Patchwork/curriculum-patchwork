title: Basic Command Line Interface (CLI) Configuration
pre-requisites: DSS-09_merge-pr
learning-objective: Introduce the Command Line
screens:
  - image-slide:
      title: Using the Command Line
      image: blank.png
      presenter-script: |
        If you've done either of the other two Patchwork courses, then so far all the work we've done has been using GitHub's web interface. However, if you're comfortable on the command line you can easily integrate GitHub into your current workflow.

        In this section, we'll teach you how to use Git and GitHub effectively through the command line. We assume a working knowledge of the command line interface, so if you're rusty you might want to brush up on using the CLI before forging ahead.

        To get to the command line, you should do the following:

        * **Mac**: Type `command-space` to bring up Spotlight search, then search for `Terminal`.
        * **Linux**: Open up your prefered shell, such as bash or fish.
        * **Windows**: We recommend that you download <a href="https://msysgit.github.io/" target="_blank">Git for Windows from GitHub</a>, as it includes a bash emulator. Without it, the Windows CLI will look a lot different from the Mac / Linux CLI.

        If you've never used the command line before, you might want to <a href="http://lifehacker.com/5633909/who-needs-a-mouse-learn-to-use-the-command-line-for-almost-anything" target="_blank">learn more about it here</a>.
  - image-slide:
      title: Git vs. GitHub
      image: git-v-github.png
      presenter-script: |
        When using the command line, you'll be working with Git. Git is the underlying version control system that GitHub makes use of. Some of the features we've discussed so far, such as pull request and issues, are functionality that GitHub adds. Others, like branching and commits, are Git functionality.

        You can think of Git as a version control tool that you can use locally, and GitHub as a remote service that makes using that tool with other people on your team much more functional and seamless.
  - image-slide:
      title: Checking Git Version
      image: blank.png
      presenter-script: |
        Git is OS agnostic; the commands are essentially the same whether you are on Mac, Windows or Linux. You can use your favorite application to interact with the command line.

        First, let's check the version of Git currently installed on your system by typing `git --version` into the command line. You should have the latest version of Git installed.

        Find out what the most recent version of git is at <a href="http://git-scm.com" target="_blank">git-scm.com</a>.

        If you don't have the right version, or if you get an error saying Git isn't installed, then you need to install Git. If you're on Linuc or Mac, go to <a href="http://git-scm.com" target="_blank">git-scm.com</a> to download and install the latest version. If you're on Windows, then it's easier if you install the [GitHub Desktop client](https://desktop.github.com/), as it comes with Git and other utilities to make using the command line on Windows easier.

        Once you've verified you have the latest version of Git installed, you're ready to move on to getting Git configured correctly.
additional-labs:
additional-questions:
resources:
